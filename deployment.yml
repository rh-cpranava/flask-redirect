apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"flask-redirect:main"},"fieldPath":"spec.template.spec.containers[?(@.name==\"flask-redirect\")].image"}]'
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: flask-redirect
      app.kubernetes.io/component: flask-redirect
      app.kubernetes.io/instance: flask-redirect
    name: flask-redirect
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: flask-redirect
    strategy: {}
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deployment: flask-redirect
      spec:
       containers:
        - image: 'quay.io/cpranava0/flask-redirect:main'
          name: flask-redirect
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          env:
          - name: BASE_URL
            value: https://jsonplaceholder.typicode.com/todos/1 
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: flask-redirect
      app.kubernetes.io/component: flask-redirect
      app.kubernetes.io/instance: flask-redirect
    name: flask-redirect
  spec:
    ports:
    - name: 5000-tcp
      port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      deployment: flask-redirect
  status:
    loadBalancer: {}
kind: List
metadata: {}

